"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGOAPP_FERNET_KEY', '42mhp!suat8*4z%4(qd-p#2rft8*tngm8e!_av^r@cqbjno3@4')

# TODO: Move to k8s ConfigMap object
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['192.168.39.196', 'localhost', '127.0.0.1']


# Application definition
INSTALLED_APPS = [
    'users.apps.UsersConfig',
    'projects.apps.ProjectsConfig',
    'payments.apps.PaymentsConfig',
    'crispy_forms',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages',
    'djstripe',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB', 'postgres'),
        'USER': os.getenv('POSTGRES_USER', 'postgres'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD', ''),
        'HOST': os.getenv('POSTGRES_HOST'),
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TODO: Get timezone from ConfigMap
# TIME_ZONE = 'UTC'
TIME_ZONE = os.getenv('DJANGOAPP_CUSTOM_TIME_ZONE', 'UTC')

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/opt/static/'
STATIC_ROOT = '/opt/static/'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/opt/media/'
MEDIA_ROOT = '/opt/media/'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = 'treesnqs-home'
LOGIN_URL = 'login'

ADMIN_DEFAULT_URL = f"{os.getenv('DJANGOAPP_ADMIN_DEFAULT_URL', 'admin')}/"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('DJANGOAPP_EMAIL_USER', 'unknown')
EMAIL_HOST_PASSWORD = os.getenv('DJANGOAPP_EMAIL_PASSWORD', 'unknown')

# AWS settings media files (user generated)
AWS_ACCESS_KEY_ID = os.getenv('DJANGOAPP_AWS_ACCESS_KEY_ID', 'default')
AWS_SECRET_ACCESS_KEY = os.getenv('DJANGOAPP_AWS_SECRET_ACCESS_KEY', 'default')
AWS_STORAGE_BUCKET_NAME = os.getenv('DJANGOAPP_AWS_STORAGE_BUCKET_NAME', 'default')
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_S3_REGION_NAME = 'eu-central-1'
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_S3_SIGNATURE_VERSION = 's3v4'
# AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
# PUBLIC_MEDIA_LOCATION = 'media'
# MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
# AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}

# Stripe Payments
# https://dashboard.stripe.com/test/dashboard

# Publishable Key pk_test_5fmmEWu1gFayFdYFmctskmcX006YNB5lQl
STRIPE_LIVE_PUBLIC_KEY = os.getenv("DJANGOAPP_STRIPE_LIVE_PUBLIC_KEY", "default")
STRIPE_LIVE_SECRET_KEY = os.getenv("DJANGOAPP_STRIPE_LIVE_SECRET_KEY", "default")
STRIPE_TEST_PUBLIC_KEY = os.getenv("DJANGOAPP_STRIPE_TEST_PUBLIC_KEY", "default")
STRIPE_TEST_SECRET_KEY = os.getenv("DJANGOAPP_STRIPE_TEST_SECRET_KEY", "default")
DJSTRIPE_WEBHOOK_SECRET = os.getenv("DJANGOAPP_DJSTRIPE_WEBHOOK_SECRET", "default")
# TODO: Move to k8s ConfigMap object
# Change to True in production
STRIPE_LIVE_MODE = False
