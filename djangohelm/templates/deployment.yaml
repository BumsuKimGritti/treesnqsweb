apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "djangohelm.name" . }}
  labels:
    app: {{ template "djangohelm.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "djangohelm.name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "djangohelm.name" . }}
        release: {{ .Release.Name }}
    spec:
#      volumes:
#        - name: static-assets
#          configMap:
#            name: {{ template "djangohelm.name" . }}
#            defaultMode: 420
      initContainers:
        - name: wait-for-db
          image: "{{ .Values.initContainerImage }}"
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ template "postgresql.fullname" . }} 5432 && echo postgresql ok;
                do sleep 2;
              done
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
          - name: POSTGRES_USER
          {{- if .Values.postgresql.enabled }}
            value: {{ .Values.postgresql.postgresqlUsername }}
          {{- else}}
            value: {{ .Values.externalDatabase.host | quote }}
          {{- end}}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.postgresql.enabled }}
                name: {{ template "postgresql.fullname" . }}
                key: postgresql-password
              {{- else }}
                name: {{ printf "%s-%s" .Release.Name "externaldb" }}
                key: postgresql-password
              {{- end }}
          - name: POSTGRES_HOST
          {{- if .Values.postgresql.enabled }}
            value: {{ template "postgresql.fullname" . }}
          {{- else }}
            value: {{ .Values.externalDatabase.host | quote }}
          {{- end }}
          - name: POSTGRES_PORT
          {{- if .Values.postgresql.enabled }}
            value: {{ .Values.postgresql.service.port | quote }}
          {{- else }}
            value: {{ .Values.externalDatabase.port | quote }}
          {{- end }}
          - name: POSTGRES_DB
          {{- if .Values.postgresql.enabled }}
            value: {{ .Values.postgresql.postgresqlDatabase }}
          {{- else}}
            value: ""
          {{- end}}
          ports:
            - containerPort: 80
#          volumeMounts:
#            - mountPath: /usr/share/nginx/html/
#              name: static-assets
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
